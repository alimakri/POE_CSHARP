@model ZZ_Eval.Models.DuckFamily
@{
    ViewBag.Title = "Question 8";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
<form method="post">
    <h2 id="h2"></h2>
    <div style="display:flex">
        <div style="margin:15px">
            <h3>Pommes</h3><input type="number" name="pomme" min="0" max="3" value="0" />
        </div>
        <div style="margin:15px">
            <h3>Poires</h3><input type="number" name="poire" min="0" max="3" value="0" />
        </div>
        <div style="margin:15px">
            <h3>Scoubidous</h3><input type="number" name="scoubidou" min="0" max="3" value="0" />
        </div>
    </div>
    <div style="margin:15px">
        <input type="submit" name="submit" id="commande" value="Commander" />
        <input type="button" id="reset" value="Reset" />
        <h3><label id="total">@ViewBag.Total</label> €</h3>
    </div>
</form>
@section scripts{
    <script>
        var h2 = document.getElementById("h2");
        var reset = document.getElementById("reset");
        var commande = document.getElementById("commande");
        var totalLabel = document.getElementById("total");
        var form = document.querySelector("form");

        // Initialiser les données de commande et le total à partir du localStorage
        var commandData = JSON.parse(localStorage.getItem("commandData")) 
        var total = calculateTotal(commandData);
        updateTotal(total);

        
        // Soumettre le formulaire
        form.addEventListener("submit", function (e) {
            e.preventDefault();

            // Récupérer les valeurs des champs de saisie
            var pomme = parseInt(form.elements["pomme"].value);
            var poire = parseInt(form.elements["poire"].value);
            var scoubidou = parseInt(form.elements["scoubidou"].value);

            // Ajouter les quantités aux données de commande existantes
            commandData.pomme += pomme;
            commandData.poire += poire;
            commandData.scoubidou += scoubidou;

            // Recalculer le total et le mettre à jour
            total = calculateTotal(commandData);
            updateTotal(total);

            // Enregistrer les données de commande dans le localStorage
            localStorage.setItem("commandData", JSON.stringify(commandData));

            // Réinitialiser les valeurs des champs de saisie
            form.elements["pomme"].value = 0;
            form.elements["poire"].value = 0;
            form.elements["scoubidou"].value = 0;
        });

        // Réinitialiser les données de commande et le total
        reset.addEventListener("click", function () {
            commandData = { pomme: 0, poire: 0, scoubidou: 0 };
            total = calculateTotal(commandData);
            updateTotal(total);
            localStorage.setItem("commandData", JSON.stringify(commandData));
            form.elements["pomme"].value = 0;
            form.elements["poire"].value = 0;
            form.elements["scoubidou"].value = 0;
        });

        // Fonction pour calculer le total
        function calculateTotal(commandData) {
            return commandData.pomme * 1 + commandData.poire * 0.1 + commandData.scoubidou * 0.01;
        }

        // Fonction pour mettre à jour l'affichage du total
        function updateTotal(total) {
            totalLabel.textContent = total.toFixed(2);
        }
    </script>
}

@section retour{
    <a href="/home/question/8">Retour</a>
}
